cmake_minimum_required( VERSION 3.10 )

project( NPendulum )

set( CMAKE_CXX_STANDARD 11 )
set( CMAKE_CXX_STANDARD_REQUIRED True )

SET( 	SOLUTION_DIR
		${PROJECT_SOURCE_DIR}
	)

SET( 	DEPENDENCIES_PATH
		${PROJECT_SOURCE_DIR}/extern
	)

# Dependencies Needed
set( ENKITS_BUILD_EXAMPLES OFF CACHE BOOL "Build basic example applications" )
set( GLFW_BUILD_EXAMPLES OFF CACHE BOOL  "GLFW lib only" )
set( GLFW_BUILD_TESTS OFF CACHE BOOL  "GLFW lib only" )
set( GLFW_BUILD_DOCS OFF CACHE BOOL  "GLFW lib only" )
set( GLFW_BUILD_INSTALL OFF CACHE BOOL  "GLFW lib only" )

if (CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
	set(SKCODE_COMPILER_FLAGS_COMMON "/GS- /W3 /GR- /WX- /MP /nologo /bigobj")
	set(CMAKE_CXX_FLAGS "/DWIN32 /D_WINDOWS")

	set(CMAKE_CXX_FLAGS_DEBUG "${SKCODE_COMPILER_FLAGS_COMMON} /Od /RTC1 /MDd")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /Zi")

	#set(CMAKE_CXX_FLAGS_OPTIMIZEDDEBUG "${SKCODE_COMPILER_FLAGS_COMMON} /GL /Gy /Zi /Gm /O2 /Oi /MD")
	#set(CMAKE_CXX_FLAGS_RELEASE "${SKCODE_COMPILER_FLAGS_COMMON} /GL /Gy /O2 /Oi /MD")
	#set(CMAKE_CXX_FLAGS_RELEASE "${SKCODE_COMPILER_FLAGS_COMMON} /GL /Gy /Zi /Gm /O2 /Oi /MD")
	set(CMAKE_CXX_FLAGS_RELEASE "${SKCODE_COMPILER_FLAGS_COMMON} /GL /Gy /Zi /O2 /Oi /MD")
endif()

add_subdirectory( ${DEPENDENCIES_PATH}/glfw )

add_subdirectory( src/ )

set( CMAKE_PDB_OUTPUT_DIRECTORY "${SOLUTION_DIR}/WorkingDir" )
